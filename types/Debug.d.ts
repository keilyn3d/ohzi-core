export { debug as Debug };
declare const debug: Debug;
declare class Debug {
    init(): void;
    Vector3_one: any;
    Vector3_zero: any;
    canvas_renderer: any;
    display_texture_meshes: any[];
    ctx: any;
    scene: any;
    camera: PerspectiveCamera;
    draw_arrow(origin: any, dir: any, color?: number): Arrow;
    draw_axis(): AxisHelper;
    set_debug_RT(RT: any): void;
    rt_debug: any;
    draw_rectangle(position_2d: any, width: any, height: any, color: any): void;
    clear(): void;
    draw_line_2D(from: any, to: any, color: any): void;
    draw_line(points: any, color?: number): any;
    draw_cube(pos: any, size: any, color: any): Cube;
    draw_oriented_cube(from: any, to: any, height?: number, color?: string, depth?: number): Cube;
    draw_plane(width: any, height: any, color: any): any;
    draw_empty_cube(pos: any, size: any, color: any): any;
    draw_sphere(pos: any, size: any, color: any): Sphere;
    draw_point_array(input_points: any, open?: boolean, color?: number): any;
    draw_sphere_helper(sphere: any, color: any): any;
    draw_math_sphere(sphere: any): void;
    draw_bounding_box(bb: any): void;
    draw_curve(curve: any, options: any): void;
    draw_texture(tex: any, w: any, h: any): any;
    render(graphics: any): void;
}
import { PerspectiveCamera } from "./PerspectiveCamera";
import { Arrow } from "./primitives/Arrow";
import { AxisHelper } from "./components/AxisHelper";
import { Cube } from "./primitives/Cube";
import { Sphere } from "./primitives/Sphere";
